body {
  background: #eee;
}

// Variables
$borderColor: #808080;
$colorA: #f2a34d;
$colorB: #f13939;

// Wrapper for the btn,, just to add some 3D effect to the btn when Hover
.w-btn {
  perspective: 1000px;
  width: 270px;
}

// Button Styles >> btn.scss
.btn {
  position: relative;
  padding: 20px;
  border: 3px solid $borderColor;
  text-align: left;
  cursor: pointer;

  // Button Size
  &-mid {
    width: 280px;
    height: 120px;
    font-size: 42px;
    font-weight: bold;
  }

  // if it was a delete btn
  &-delete {
    transform-style: preserve-3d;
    background: $colorA;
    transition: all 600ms cubic-bezier(0.68, -0.55, 0.265, 1.55);

    &:after, &:before {
      backface-visibility: hidden;
      position: absolute;
    }

    // White circle
    &:after {
      content: '';
      display: block;
      top: 8px;
      right: 15px;
      width: 100px;
      height: 100px;
      background: #fff;
      border-radius: 50%;
      box-shadow: 0 0 12px rgba(0, 0, 0, 0.2);
      transform: rotateX(-180deg) translateZ(60px);
    }

    // X Mark
    &:before {
      content: url("data:image/svg+xml;charset=UTF-8, <svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='40' width='40'><line x1='0' y1='0' x2='40' y2='40' stroke='black' stroke-width='5'/><line x1='40' y1='0' x2='0' y2='40' stroke='black' stroke-width='5'/></svg>");
      display: block;
      width: 40px;
      height: 40px;
      z-index: 10;
      top: 39px;
      right: 48px;
      transform: rotateX(-180deg) translateZ(100px);
    }

    span.front {
      display: block;
      text-align: center;
      transform: translateZ(30px) translateY(10px) rotateX(0deg);
    }

    span.back {
      display: block;
      backface-visibility: hidden;
      transform: translateZ(-30px) translateY(-30px) rotateX(-180deg)
    }

    &:hover {
      transition: all 600ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
      transform: rotateX(180deg);
      background: $colorB;
    }
  }
}
